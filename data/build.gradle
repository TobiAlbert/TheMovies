apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion



    defaultConfig {
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':domain')
    def appDependencies = rootProject.ext.appDependencies
    def testDependencies = rootProject.ext.testDependencies

    api appDependencies.okHttp
    api appDependencies.okHttpInterceptor
    api appDependencies.retrofit2
    api appDependencies.retrofitRxAdapter
    api appDependencies.retrofitConverter

    api appDependencies.roomRuntime
    implementation appDependencies.roomRxJava

    implementation appDependencies.dagger2
    annotationProcessor appDependencies.dagger2Compiler

    annotationProcessor appDependencies.roomCompiler

    compileOnly appDependencies.autoValue
    annotationProcessor appDependencies.autoValue

    compileOnly appDependencies.autoValueGson
    annotationProcessor appDependencies.autoValueGson

    // Unit testing
    testImplementation testDependencies.junit
    testImplementation testDependencies.assertj
    testImplementation testDependencies.mockito
}
